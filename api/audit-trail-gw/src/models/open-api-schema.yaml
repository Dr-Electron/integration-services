{"components":{"schemas":{"CreateChannelBodySchema":{"type":"object","properties":{"name":{"description":"A channel can be searched by its name.","type":"string"},"description":{"description":"An optional description for a channel.","type":"string"},"subscriptionPassword":{"minLength":8,"description":"If a subscriptionPassword is set, all data is encrypted with the password. It need to be made sure, the subscription password is sent when interacting with the APIs of the channel-service and subscription-service.","type":"string"},"topics":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"source":{"type":"string"}},"required":["type","source"]}},"hasPresharedKey":{"description":"If the channel has a preshared key (hasPresharedKey=true) but non is set in the presharedKey property it will be generated by the api.","type":"boolean"},"seed":{"minLength":1,"description":"If left empty the api will generate a seed automatically. Always store your seed otherwise the data can not be reimported.","type":"string"},"presharedKey":{"minLength":32,"maxLength":32,"description":"If the channel has a preshared key (hasPresharedKey=true) but non is defined here the presharedKey will be generated by the api.","type":"string"}},"required":["topics"]},"AddChannelLogBodySchema":{"type":"object","properties":{"type":{"minLength":1,"description":"Public available type.","type":"string"},"created":{"format":"date-time","description":"Public available date.","type":"string"},"metadata":{"description":"Public available metadata."},"publicPayload":{"description":"Public available payload."},"payload":{"description":"Payload is stored encrypted in the channel."}}},"ChannelDataSchema":{"type":"object","properties":{"link":{"type":"string"},"imported":{"format":"date-time","description":"Date when the data was imported from the tangle into the cached database.","type":"string"},"messageId":{"description":"Message id can be used to search for the message in an IOTA explorer.","type":"string"},"log":{"type":"object","properties":{"type":{"minLength":1,"description":"Public available type.","type":"string"},"created":{"format":"date-time","description":"Public available date.","type":"string"},"metadata":{"description":"Public available metadata."},"publicPayload":{"description":"Public available payload."},"payload":{"description":"Payload is stored encrypted in the channel."}}}},"required":["link","log"]},"ValidateBodySchema":{"type":"array","items":{"type":"object","properties":{"link":{"type":"string"},"imported":{"format":"date-time","description":"Date when the data was imported from the tangle into the cached database.","type":"string"},"messageId":{"description":"Message id can be used to search for the message in an IOTA explorer.","type":"string"},"log":{"type":"object","properties":{"type":{"minLength":1,"description":"Public available type.","type":"string"},"created":{"format":"date-time","description":"Public available date.","type":"string"},"metadata":{"description":"Public available metadata."},"publicPayload":{"description":"Public available payload."},"payload":{"description":"Payload is stored encrypted in the channel."}}}},"required":["link","log"]}},"AuthorizeSubscriptionBodySchema":{"type":"object","properties":{"subscriptionLink":{"minLength":1,"type":"string"},"id":{"minLength":1,"type":"string"}}},"RequestSubscriptionBodySchema":{"type":"object","properties":{"seed":{"minLength":32,"description":"If left empty the api will generate a seed. Make sure you store the seed since the API will not store it. You can reuse your seed for different channels.","type":"string"},"accessRights":{"anyOf":[{"type":"string","const":"Audit"},{"type":"string","const":"Read"},{"type":"string","const":"Write"},{"type":"string","const":"ReadAndWrite"}]},"presharedKey":{"maxLength":32,"minLength":32,"type":"string"}}},"RevokeSubscriptionBodySchema":{"type":"object","properties":{"subscriptionLink":{"minLength":1,"type":"string"},"id":{"minLength":1,"type":"string"}}},"ReimportBodySchema":{"type":"object","properties":{"seed":{"minLength":1,"type":"string"},"subscriptionPassword":{"minLength":8,"description":"If a subscriptionPassword is set, all data is encrypted with the password. It need to be made sure, the subscription password is sent when interacting with the APIs of the channel-service and subscription-service.","type":"string"}}},"CreateChannelResponseSchema":{"type":"object","properties":{"seed":{"minLength":1,"type":"string"},"channelAddress":{"minLength":105,"maxLength":105,"type":"string"},"presharedKey":{"minLength":32,"maxLength":32,"type":"string"}},"required":["channelAddress"]},"AuthorizeSubscriptionResponseSchema":{"type":"object","properties":{"keyloadLink":{"type":"string"}},"required":["keyloadLink"]},"RequestSubscriptionResponseSchema":{"type":"object","properties":{"seed":{"minLength":32,"maxLength":72,"description":"Auto generated seed. Make sure you store the seed since the API will not store it. You can reuse your seed for different channels.","type":"string"},"subscriptionLink":{"type":"string"}},"required":["seed","subscriptionLink"]},"ValidateResponseSchema":{"type":"array","items":{"type":"object","properties":{"link":{"type":"string"},"isValid":{"type":"boolean"},"error":{"type":"string"},"tangleLog":{}},"required":["link","isValid"]}},"ErrorResponseSchema":{"type":"object","properties":{"error":{"type":"string"}},"required":["error"]},"ChannelInfoSearchSchema":{"type":"object","properties":{"authorId":{"type":"string"},"name":{"description":"Optional channel name. A channel can be searched by its name.","type":"string"},"topicType":{"type":"string"},"topicSource":{"type":"string"},"created":{"format":"date-time","type":"string"},"latestMessage":{"format":"date-time","type":"string"},"limit":{"type":"number"},"index":{"type":"number"},"ascending":{"description":"Sorting the channels by creation date ascending or descending","type":"boolean"}}},"SubscriptionSchema":{"type":"object","properties":{"type":{"anyOf":[{"type":"string","const":"Author"},{"type":"string","const":"Subscriber"}]},"channelAddress":{"minLength":105,"maxLength":105,"type":"string"},"id":{"minLength":50,"maxLength":53,"type":"string"},"state":{"type":"string"},"subscriptionLink":{"type":"string"},"isAuthorized":{"type":"boolean"},"accessRights":{"anyOf":[{"type":"string","const":"Audit"},{"type":"string","const":"Read"},{"type":"string","const":"Write"},{"type":"string","const":"ReadAndWrite"}]},"publicKey":{"type":"string"},"keyloadLink":{"type":"string"},"sequenceLink":{"type":"string"},"pskId":{"type":"string"}},"required":["type","channelAddress","id","state","isAuthorized","accessRights"]},"SubscriptionUpdateSchema":{"type":"object","properties":{"type":{"anyOf":[{"type":"string","const":"Author"},{"type":"string","const":"Subscriber"}]},"channelAddress":{"minLength":105,"maxLength":105,"type":"string"},"id":{"minLength":50,"maxLength":53,"type":"string"},"state":{"type":"string"},"subscriptionLink":{"type":"string"},"isAuthorized":{"type":"boolean"},"accessRights":{"anyOf":[{"type":"string","const":"Audit"},{"type":"string","const":"Read"},{"type":"string","const":"Write"},{"type":"string","const":"ReadAndWrite"}]},"publicKey":{"type":"string"},"keyloadLink":{"type":"string"},"sequenceLink":{"type":"string"},"pskId":{"type":"string"}}},"ChannelInfoSchema":{"type":"object","properties":{"channelAddress":{"minLength":105,"maxLength":105,"type":"string"},"name":{"description":"A channel can be searched by its name.","type":"string"},"description":{"description":"An optional description of the channel.","type":"string"},"authorId":{"minLength":50,"maxLength":53,"type":"string"},"subscriberIds":{"type":"array","items":{"minLength":50,"maxLength":53,"type":"string"}},"topics":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"source":{"type":"string"}},"required":["type","source"]}},"created":{"format":"date-time","type":"string"},"latestMessage":{"format":"date-time","type":"string"}},"required":["channelAddress","name","authorId","topics"]},"TopicSchema":{"type":"object","properties":{"type":{"type":"string"},"source":{"type":"string"}},"required":["type","source"]},"IdentityIdSchema":{"minLength":50,"maxLength":53,"type":"string"},"ChannelAddressSchema":{"minLength":105,"maxLength":105,"type":"string"}}}}